package commands;

import gui.MyFrame;

import java.awt.geom.Point2D;

import javax.swing.SwingUtilities;

import model.SlotModel;
import model.SlotSelectionModel;
import model.elements.CircleElement;
import model.elements.RectangleElement;
import model.elements.SlotDevice;
import model.elements.SlotElement;
import model.workspace.Circle;
import model.workspace.GraphicSlot;
import model.workspace.Rectangle;
import view.GraphicSlotView;


public class AddDeviceCommand  extends AbstractCommand{

	SlotModel model;
	Point2D lastPosition;
	SlotElement device = null;
	SlotSelectionModel selectionModel;
	int deviceType;
	Object obj;
	
	public AddDeviceCommand(SlotModel model,SlotSelectionModel selectionModel, Point2D lastPosition,int deviceType,Object m) {
		this.model = model;
		this.lastPosition = lastPosition;
		this.selectionModel = selectionModel;
		this.deviceType=deviceType;	
		obj=m;

	}

	@Override
	public void doCommand() {
			System.out.println("*****DO");
			if (deviceType==GraphicSlotView.CIRCLE){
				device=CircleElement.createDefault(lastPosition,model.getDevicesCount());
				//device=CircleElement.createDefault(lastPosition,model.getCounter());

				Object p = MyFrame.getInstance().getWorkspaceTree().getLastSelectedPathComponent();
				//dodavanje kruga u stablo
				if (obj  instanceof GraphicSlotView) {
					GraphicSlot gs = ((GraphicSlotView) obj).getGraphicSlot();
					//System.out.println(gs.getGraphicSlotView().getName());
					System.out.println(gs.getName());
					//gs.getGraphicSlotView().repaint();
					((GraphicSlotView) obj).repaint();
					
						Circle r = new Circle("New Circle",gs);
						CircleElement ce = (CircleElement)device;
						//r.setName(ce.getName());
						
						r.setCircleElement(ce);//vezuje CircleElement sa cvorom Circle
						ce.setCircle(r);
						
						gs.addCircles(r,ce.getName());
						//SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());

					
				}
				
				
			}else if (deviceType==GraphicSlotView.RECTANGLE){
				device=RectangleElement.createDefault(lastPosition,model.getDevicesCount());
				//device=RectangleElement.createDefault(lastPosition,model.getCounter());
				//System.out.println("Dodaj u stablo pravougaonik!");
				//dodavanje pravougaonika u stablo
				if (obj  instanceof GraphicSlotView) {
					
						GraphicSlot gs = ((GraphicSlotView) obj).getGraphicSlot();
						//gs.getGraphicSlotView().repaint();
						((GraphicSlotView) obj).repaint();
					
							Rectangle r = new Rectangle("New Rectangle",gs);
							RectangleElement re = (RectangleElement)device;
							//r.setName(re.getName());
							
							r.setRectangleElement(re);
							re.setRectangle(r);
							
							gs.addRectangles(r,re.getName());
							//SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
					
					}
				}

	//	selectionModel.removeAllFromSelectionList();
		
		model.addSlotDevice((SlotDevice) device);	
		
	//	selectionModel.addToSelectionList(device);
	
	}

	@Override
	public void undoCommand() {
		/*System.out.println("*****UNDO");
		if(device!=null){
			//selectionModel.removeAllFromSelectionList();
			model.removeDevice(device);
			System.out.println("Desa222");
			
			Object p = MyFrame.getInstance().getWorkspaceTree().getLastSelectedPathComponent();
			//brisanje kruga u stablo
			if (p  instanceof GraphicSlot) {
				GraphicSlot gs = ((GraphicSlot) p);
				//gs.getGraphicSlotView().repaint();
				((GraphicSlotView) obj).repaint();
				
				if(device instanceof CircleElement){
					//Circle r = new Circle("New Circle",gs);
					CircleElement ce = (CircleElement)device;
					Circle r = ce.getCircle();
					r.setName(ce.getName());
					
					//r.setCircleElement(ce);
					//ce.setCircle(r);
					
					gs.removeCircle(r);
					//System.out.println("Brisi iz stabla krug!");
					SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
	
				}else if(device instanceof RectangleElement){
					//Rectangle r = new Rectangle("New Rectangle",gs);
					RectangleElement re = (RectangleElement)device;
					Rectangle r = re.getRectangle();
					r.setName(re.getName());
					
					//r.setRectangleElement(re);
					//re.setRectangle(r);
					
					gs.removeRectangle(r);
					//System.out.println("Brisi iz stabla pravougaonik!");
					SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
					
					
				}
			}
		}*/
	}
}



	

