package actions;

import gui.MyFrame;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.SwingUtilities;
import javax.swing.tree.TreePath;

import model.workspace.Document;
import model.workspace.GraphicSlot;
import model.workspace.Page;
import model.workspace.Project;
import model.workspace.TextSlot;
import view.DocView;
import view.GraphicSlotView;
import view.PageView;
import view.ProjectView;
import view.TextSlotView;

public class DeleteAction implements ActionListener{

	public void actionPerformed(ActionEvent arg0) {
		Object o = MyFrame.getInstance().getWorkspaceTree().getLastSelectedPathComponent();
		
		TreePath path = MyFrame.getInstance().getWorkspaceTree().getSelectionPath();
		Object parent = path.getPathComponent(path.getPathCount()-2);//indeks roditelje je za 2 umanjen duzina putanje
																	//dati cvor se nalazi na duzina putanje-1
		if (o instanceof Project){
			MyFrame.getInstance().getWorkspaceTree().removeProject((Project)o);
			SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
			
			
			JInternalFrame[] frames = MyFrame.getInstance().getDesktop().getAllFrames();
			for (JInternalFrame frame : frames){
				if (frame instanceof ProjectView){
					ProjectView view = (ProjectView)frame;
					if ( (Project) o == view.getProject())	{	
						Project p = (Project) o;
						if (view.getName() == p.getName()){
							
							view.setVisible(false);
							MyFrame.getInstance().getDesktop().remove(view);
						}			
					}
				}
			}
			
			
		}else if (o instanceof Document){
			Project p = (Project) parent;
			Document d = (Document)o;
			p.removeDocument(d);
			SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
			
			/*JInternalFrame frame = MyFrame.getInstance().getDesktop().getSelectedFrame();
			ProjectView view = (ProjectView)frame;
			JTabbedPane tabbDoc = (JTabbedPane)view.getContentPane().getComponent(0);
			
			for (int j = 0; j < tabbDoc.getTabCount(); j++)//krene od prvog do ukupnog broja tabova 
			{	
				if (tabbDoc.getTitleAt(j) == d.name)	//i poredi nazive(titlove) tabova sa nazivom dokumenta
				{
					tabbDoc.removeTabAt(j);
				}	
			}
			view.revalidate();
			view.repaint();*/
		} else if (o instanceof Page){	
			//Project p = (Project)grandpa;
			Document d = (Document)parent;
			Page pg = (Page)o;
			d.removePage(pg);
			SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
			
			/*JInternalFrame frame = MyFrame.getInstance().getDesktop().getSelectedFrame();
			ProjectView view = (ProjectView)frame;
			
			//JPanel docPanel = (JPanel)tabbDoc.getSelectedComponent();
			for(DocView dv : view.getDocuments())
			{

				if(dv.getName() == ((Document)d).getName())
				{
					
					for (PageView pv : dv.getPages())
					{

						if (pv.getName() == ((Page) pg).getName()) 
						{
							JPanel content = dv.getContentPanel();
							content.remove(pv);
							dv.removePage(pv);
							content.revalidate();
							content.repaint();
						}
						
					}
				
				}
			}*/
			/*JPanel contentPanel = NewDocumentAction.GetDocumentContentPanel(docPanel);//a u njemu panel na koji dodajemo stranice
		    int indPage = d.getPageIndex(pg);
			for(int ind = 0;ind < contentPanel.getComponentCount();ind++){
		    	JPanel pagePanel = (JPanel) contentPanel.getComponent(ind);
		    	if(pg.getName() == pagePanel.getName()){
		    		for(int c = 0; c < pagePanel.getComponentCount(); c++){
		    			pagePanel.remove(c);
		    		}
		    		contentPanel.remove(ind);
		    		contentPanel.revalidate();
					contentPanel.repaint();

		    	}
		    }*/
		}else if (o instanceof GraphicSlot){
			Object grandpa = path.getPathComponent(path.getPathCount()-3);
			Document d = (Document)grandpa;
			GraphicSlot s = (GraphicSlot)o;
			Page pg = (Page)parent;
			pg.removeGraphicSlot(s);
			SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
			
			JInternalFrame frame = MyFrame.getInstance().getDesktop().getSelectedFrame();
			ProjectView view = (ProjectView)frame;
			for(DocView dv : view.getDocuments())
			{
				if(dv.getName() == ((Document)d).getName())
				{
					for (PageView pv : dv.getPages())
					{
						if (pv.getName() == ((Page) pg).getName()) 
						{
							for(Object slot : pv.getSlots())
							{
								if(slot instanceof GraphicSlotView)
								{
									GraphicSlotView gs = (GraphicSlotView)slot;

									if(gs.getName() == s.getName())
									{
										pv.remove(gs);
										pv.removeSlot(slot);
										pv.revalidate();
										pv.repaint();
									}
								}
							}
						}
					}
				
				}
			}
			/*JTabbedPane tabbDoc = (JTabbedPane)view.getContentPane().getComponent(0);
			
			for (int j = 0; j < tabbDoc.getTabCount(); j++)//krene od prvog do ukupnog broja tabova 
			{	
				if (tabbDoc.getTitleAt(j) == d.name)	//i poredi nazive(titlove) tabova sa nazivom dokumenta
				{
					tabbDoc.setSelectedIndex(j);;
				}	
			}
			JPanel docPanel = (JPanel)tabbDoc.getSelectedComponent();
			JPanel contentPanel = NewDocumentAction.GetDocumentContentPanel(docPanel);
			
			int indPage = d.getPageIndex(pg);
			for(int ind = 0;ind < contentPanel.getComponentCount();ind++){
		    	JPanel pagePanel = (JPanel) contentPanel.getComponent(ind);
		    	if(pg.getName() == pagePanel.getName()){
		    		for(int slotInd = 0; slotInd < pagePanel.getComponentCount(); slotInd++){
		    			GraphicSlotView slotPanel = (GraphicSlotView)pagePanel.getComponent(slotInd);
		    			if (s.name == slotPanel.getName()){
		    				System.out.println(slotInd);
		    				slotPanel.removeAll();
		    				pagePanel.remove(slotInd);
		    				
		    				pagePanel.repaint();
		    			}
		    		}
		    	}
			}*/
		}else if (o instanceof TextSlot){
			Object grandpa = path.getPathComponent(path.getPathCount()-3);
			Document d = (Document)grandpa;
			TextSlot s = (TextSlot)o;
			Page pg = (Page)parent;
			pg.removeTextSlot(s);
			SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
			
			JInternalFrame frame = MyFrame.getInstance().getDesktop().getSelectedFrame();
			ProjectView view = (ProjectView)frame;
			for(DocView dv : view.getDocuments())
			{
				if(dv.getName() == ((Document)d).getName())
				{
					for (PageView pv : dv.getPages())
					{
						if (pv.getName() == ((Page) pg).getName()) 
						{
							for(Object slot : pv.getSlots())
							{
								if(slot instanceof TextSlotView)
								{
									TextSlotView gs = (TextSlotView)slot;
									if(gs.getName() == s.getName())
									{
										pv.remove(gs);
										pv.removeSlot(slot);
										pv.revalidate();
										pv.repaint();
									}
								}
							}
						}
					}
				
				}
			}
		}
	}
}