package model.elements;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Paint;
import java.awt.Shape;
import java.awt.Stroke;
import java.awt.geom.Point2D;

public abstract class SlotDevice extends SlotElement {

	protected Dimension size;
	protected Point2D position;
	protected double scale;
	protected double rotation;
	protected Shape shape;


	public SlotDevice(Point2D position, Dimension size, Stroke stroke, Paint paint,Color  strokeColor){
		super(stroke, paint,strokeColor);
		this.size = size;
		//ovo omogucava translaciju tacaka tako da se element kreira u centru
		position.setLocation(position.getX()-size.getWidth()/2,position.getY()-size.getHeight()/2);
		this.position = position;
		this.strokeColor=strokeColor;
		this.scale=1;
		this.rotation=0;
		
	}
	
	/*
	 * Copy konstruktor
	 * 
	 */
	public SlotDevice(SlotDevice device){
		super(device);
		this.size=device.size;
		this.position=device.position;

	}
	
	public Shape getShape() {
		return shape;
	}

	public void setShape(Shape shape) {
		this.shape = shape;
	}
	
 
	public Point2D getPosition() {
		return position;
	}

	public void setPosition(Point2D position) {
		this.position = position;
	}

	public Dimension getInitSize(){
		return size;
	}


	public void setSize(Dimension size) {
		this.size = size;
	}

	public double getScale() {
		return scale;
	}

	public void setScale(double scale) {
		this.scale = scale;
	}

	public double getRotation() {
		return rotation;
	}

	public void setRotation(double rotation) {
		this.rotation = rotation;
	}

	public Dimension getSize() {
		Dimension tempSize = new Dimension();
		tempSize.setSize(size.getWidth()*getScale(), size.getHeight()*getScale());
		return tempSize;
	}
	
	/*public int getElementAtPosition(Point point) {
	for(int i=getElementsCount()-1;i>=0;i--){
		SlotElement element = getElementAt(i);
		if(element.getPainter().isElementAt(point)){
			return i;
		}
	}
	return -1;
	}	*/

	
}