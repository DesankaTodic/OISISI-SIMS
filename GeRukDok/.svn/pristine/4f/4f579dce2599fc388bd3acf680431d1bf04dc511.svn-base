package actions;

import gui.MyFrame;

import java.awt.Point;
import java.awt.event.ActionEvent;
import java.util.ArrayList;

import javax.swing.AbstractAction;
import javax.swing.JInternalFrame;
import javax.swing.JPanel;
import javax.swing.JTabbedPane;
import javax.swing.SwingUtilities;
import javax.swing.tree.TreePath;

import model.elements.CircleElement;
import model.elements.RectangleElement;
import model.elements.SlotElement;
import model.workspace.Circle;
import model.workspace.Document;
import model.workspace.GraphicSlot;
import model.workspace.Page;
import model.workspace.Rectangle;
import view.DocView;
import view.GraphicSlotView;
import view.PageView;
import view.ProjectView;
import commands.AddDeviceCommand;
import commands.DeleteDeviceCommand;

public class DeleteElementAction extends AbstractAction{
	
	public DeleteElementAction(){
	}
	
	public void actionPerformed(ActionEvent e) {
		Object o = MyFrame.getInstance().getWorkspaceTree().getLastSelectedPathComponent();
		TreePath path = MyFrame.getInstance().getWorkspaceTree().getSelectionPath();
		Object parent = path.getPathComponent(path.getPathCount()-2);
		 if (o instanceof GraphicSlot){
				Object grandpa = path.getPathComponent(path.getPathCount()-3);
				Document d = (Document)grandpa;
				GraphicSlot s = (GraphicSlot)o;
				
				//////////////////////////////////////////////////////////////////////////
				//iz liste selektovanih elemenata uzima posljednog 
				//i njega treba obrisati
				ArrayList<SlotElement> selektovani = s.getSelectionModel().getSelected();
				SlotElement se = null;
				if(!selektovani.isEmpty())
					se = selektovani.get(0);
				/////////////////////////////////////////////////////////////////////////////
				Page pg = (Page)parent;
				JInternalFrame frame = MyFrame.getInstance().getDesktop().getSelectedFrame();
				ProjectView view = (ProjectView)frame;
				
				for(DocView dv : view.getDocuments())
				{
					if(dv.getName() == d.getName())
					{
						for (PageView pv : dv.getPages()) 
						{
							if (pv.getName() == pg.getName()) 
							{
								for(Object slot : pv.getSlots())
								{
									if(slot instanceof GraphicSlotView)
									{
										GraphicSlotView slotView = (GraphicSlotView)slot;
										if (s.name == slotView.getName()){
						    				///////////////////////////////////////////////////////////////
					
						    				if(se instanceof CircleElement){
						    					//flag++;
						    					//System.out.println("FLAGGG u delete = "+flag);
						    					//brisanje iz liste u  SlotModelu
						    					CircleElement ce = (CircleElement)se;
						    					Point position = (Point)ce.getPosition();
						    					
						    					System.out.println(position);
						    					
						    					slotView.getCommandManager().addCommand(new DeleteDeviceCommand(slotView.getGraphicSlot().getModel(),slotView.getGraphicSlot().getSelectionModel(),position,GraphicSlotView.CIRCLE,slotView));
						    					
						    					
						    					// desa s.getModel().removeElement(se);//uklanja oblik element sa slota

						    					//s.getGraphicSlotView().repaint();
						    					slotView.repaint();
						    					//brisanje kruga iz stabla
						    					Circle c = ce.getCircle();
						    					s.removeCircle(c);
						    					SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
						    					
						    				}else if(se instanceof RectangleElement){
						    					//brisanje iz liste u  SlotModelu
						    					RectangleElement re = (RectangleElement)se;
						    					Point position = (Point) re.getPosition();
						    					
						    					slotView.getCommandManager().addCommand(new DeleteDeviceCommand(slotView.getGraphicSlot().getModel(),slotView.getGraphicSlot().getSelectionModel(),position,GraphicSlotView.RECTANGLE,slotView));
						    					
						    					//desa   s.getModel().removeElement(se);//uklanja oblik element sa slota

						    					//s.getGraphicSlotView().repaint();
						    					slotView.repaint();
						    					//brisanje pravougaonika iz stabla
						    					Rectangle r = re.getRectangle();
						    					s.removeRectangle(r);
						    					SwingUtilities.updateComponentTreeUI(MyFrame.getInstance().getWorkspaceTree());
						    					
						    				}
						    				
						    				
						    			}
									}
								}
								
							}
						}
					}
				}
				
		 }
		
	}
	
}
