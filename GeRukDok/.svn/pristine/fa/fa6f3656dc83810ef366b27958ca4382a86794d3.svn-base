package gui;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.beans.PropertyVetoException;

import javax.swing.JInternalFrame;
import javax.swing.JTabbedPane;
import javax.swing.JTree;
import javax.swing.SwingUtilities;
import javax.swing.tree.DefaultTreeCellRenderer;
import javax.swing.tree.TreePath;

import model.workspace.Document;
import model.workspace.GraphicSlot;
import model.workspace.Page;
import model.workspace.Project;
import model.workspace.TextSlot;
import model.workspace.Workspace;
import view.DocView;
import view.GraphicSlotView;
import view.PageView;
import view.ProjectView;
import view.TextSlotView;
import view.WorkspaceTreeCellEditor;
import view.WorkspaceTreeCellRendered;
import controller.WorkspaceTreeController;

public class WorkspaceTree extends JTree{
	private Workspace w = null;
	public WorkspaceTree(Workspace w) {
		super(w);
        this.w = w;
		addTreeSelectionListener(new WorkspaceTreeController());
	    setCellEditor(new WorkspaceTreeCellEditor(this,new DefaultTreeCellRenderer()));
	    setCellRenderer(new WorkspaceTreeCellRendered());
	    setEditable(true);
	   ///////////////////////////listener na stablo da bismo ponovo "otvorili" projekat, dokument itd.
	    //tj. cvorove koji se nalazi u stablu
	    MouseListener ml = new MouseAdapter() {//anonimana unutrasnja klasa
	        public void mousePressed(MouseEvent e) {//sa redefinisanom metod koju trigeruje pritisak misa na cvor stabla
	            int selRow = getRowForLocation(e.getX(), e.getY());
	            TreePath selPath = getPathForLocation(e.getX(), e.getY());//putanja do cvora na koji je izvrsen dogadjaj
	            if(selRow != -1) {
	                if(e.getClickCount() == 1) {
	                    //mySingleClick(selRow, selPath);
	                }
	                else if(e.getClickCount() == 2) {//ako 2x kliknemo na cvor 
	                	JTabbedPane tabbDoc = null;
	            		for(int i = 0; i < selPath.getPathCount(); i++){//prodjemo kroz njegovu putanju
	            			Object o = selPath.getPathComponent(i);
	            			if(o instanceof Project){//kad naidjemo na projekat 
	            				Project p = (Project)o;
	            				//selektovan je projekat u stablu

	            				JInternalFrame[] frames = MyFrame.getInstance().getDesktop().getAllFrames();
	            				for (JInternalFrame frame : frames)
	            				{
	            					if (frame instanceof ProjectView)
	            					{
	            						ProjectView view = (ProjectView)frame;
	            						if (p == view.getProject())//ako pronadjemo view koji je kao i projekat koji 
	            						{							//je selektovan u stablu, i stavi ga u fokus
	            							view.moveToFront();	
	            							try {
	        									view.setSelected(true);
	        								} catch (PropertyVetoException e1) {
	        									// TODO Auto-generated catch block
	        									e1.printStackTrace();
	        								}
	            							
	            							//zapamti tab kontrolu
	            							tabbDoc = (JTabbedPane)view.getContentPane().getComponent(0);
	            							return;
	            						}
	            					}
	            				}
	            				
	            				tabbDoc = new JTabbedPane();            				
	            				ProjectView view=new ProjectView(p);
	            				view.setProject(p);		//postavi projekat na view
	            				view.add(tabbDoc);
	            				
	            				//for (Document d : p.getDocuments())//dodaj sve dokument koji se nalaze u listi dokumenta
	            													//datog projekta
	            				//{
									//JPanel docPanel = NewDocumentAction.CreateTab(tabbDoc, d);
									//JPanel content = NewDocumentAction.GetDocumentContentPanel(docPanel);
	            					
	            				for (DocView dv : view.getDocuments())
	            				{
	            					view.add(dv);
////////////////////////////////=================desa3.3.
									
		            				for (PageView pv : dv.getPages())//krene od prvog do ukupnog broja pages 
		        					{	
		            					
		            					//Page page = d.getPage(j);
		        						//JPanel pagePanel = NewPageAction.addPage(content, d, page);
		            					//PageView pv = new PageView(d,page);
		            					dv.add(pv);
		        						
		        						for (Object slot : pv.getSlots())//krene od prvog do ukupnog broja slots 
			        					{
		        							//NewSlotAction.addSlot(pagePanel, page.getSlot(k));
		        							//Object slot = page.getSlot(k);
		        							if (slot instanceof GraphicSlotView){
		        								pv.add((GraphicSlotView)slot);
		        							}else{
		        								pv.add((TextSlotView)slot);
		        							}
		        							
			        					}      						
		        					}
		            	//////////////////////////////////////////////////////////////
		        					
	            				}

	            				MyFrame.getInstance().getDesktop().add(view);
	            				view.moveToFront();
	            				try {
									view.setSelected(true);
								} catch (PropertyVetoException e1) {
									// TODO Auto-generated catch block
									e1.printStackTrace();
								}
	            			} else if (o instanceof Document){
	            				for (int j = 0; j < tabbDoc.getTabCount(); j++)//krene od prvog do ukupnog broja tabova 
	        					{	
	        						if (tabbDoc.getTitleAt(j) == ((Document)o).name)	//i poredi nazive(titlove) tabova sa nazivom dokumenta
	        						{
	        							tabbDoc.setSelectedIndex(j);
	        						}	
	        					}
		            		}
	            		}
	                }
	            }
	        }
	    };
	    
	    addMouseListener(ml);
	}
	public Workspace getRoot(){
		return this.w;
	}
	
	/**
	 * Metoda za dodavanje novog projekta u workspace 
	 * @param project
	 */
	/*public void addProject(Project project){
		addProject(project);//kreira projekt unutar logicke strukture
		SwingUtilities.updateComponentTreeUI(this);
	}
	
	//metoda za brisanje projekta iz workspace-a
	public void removeProject(Project project){
		removeProject(project);//brise projekat iz logicke strukture
		SwingUtilities.updateComponentTreeUI(this);
	}*/

	/*public Project getCurrentProject() {
		TreePath path = getSelectionPath();
		if (path != null) {
			for (int i = 0; i < path.getPathCount(); i++) {
				if (path.getPathComponent(i) instanceof Project) {
					return (Project) path.getPathComponent(i);
				}
			}
		}
		return null;
	}*/
}
